#!/usr/bin/env node
require("colors");



const fs = require('fs');
const path = require('path');
const dsComponentsPath = 'src/components';
const dsAtomsPath = path.resolve(__dirname, '..', dsComponentsPath, 'atoms');

let argPath = process.argv[2];
let localStylesPath;


if (argPath) {
    localStylesPath = path.resolve(path.resolve(process.cwd(), argPath));

} else {
    localStylesPath = path.resolve(process.cwd(), dsComponentsPath);
}

let localAtomsPath = path.resolve(localStylesPath, 'atoms/imported');


fs.mkdirSync(localAtomsPath, { recursive: true });


fs.readdir(dsAtomsPath, { withFileTypes: true }, (err, atoms) => {
    if (err) {
        throw err
    };
    atoms.forEach(function(atom){
        const sourcePath = path.resolve(dsAtomsPath, atom.name);
        const targetPath = path.resolve(localAtomsPath, atom.name);
        if (atom.isDirectory()) {
            if (fs.existsSync(targetPath)) {
                console.warn(`Not linking`, `${atom.name}`.red, `as ${targetPath} already exists`);
            } else {
                console.log(`Linking`, `${atom.name}`.green,  ` atom to ${targetPath}`);

                fs.symlink(sourcePath, targetPath, (err) => { console.log(err) });
            }
        }
    });
});

